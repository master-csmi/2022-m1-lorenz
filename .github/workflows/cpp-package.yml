name: Cpp package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04,ubuntu-22.04]

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init 
    - name: Cache
      uses: actions/cache@v2
      env:
        cache-name: cache-conan-modules
      with:
        path: |
          ${{ env.CONAN_USER_HOME }}
          ~/.cache/pip
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('cmake/Conan.cmake') }}

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: |
        sudo apt update
        sudo apt install libboost-mpi-python-dev libboost-test-dev libboost-date-time-dev libboost-filesystem-dev libboost-serialization-dev libboost-program-options-dev libboost-regex-dev
        sudo apt install pybind11-dev doxygen
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Install Python requirements
      shell: bash
      run: | 
        python3 -m pip install --upgrade pip setuptools
        python3 -m pip install -r requirements.txt
    - name: Configure CMake
      run: cmake --preset default
    - name: Build
      run: cmake --build --preset default
    - name: Test
      run: ctest --preset default
