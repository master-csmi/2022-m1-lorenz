# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
        # python-version: ["3.8", "3.9", "3.10"]
    if: |
      !contains(github.event.head_commit.message, 'skip build')
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:   
        python-version: ${{ matrix.python-version }}
    - name: Set up MPI
      uses: mpi4py/setup-mpi@v1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Setup PYTHONPATH
      run: |
        echo "PYTHONPATH=src/python" >> $GITHUB_ENV
    - name: Test with pytest
      run: |
        pytest

  docs:

    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, 'skip docs')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:   
          python-version: 3.8
      - name: Set up MPI
        uses: mpi4py/setup-mpi@v1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install sphinx
          python -m pip install sphinx_rtd_theme
          pip install -r requirements.txt
      # - name: Setup PYTHONPATH
      #   run: |
      #     echo "PYTHONPATH=../../src/python" >> $GITHUB_ENV 
      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: |
          sudo apt update
          sudo apt install libboost-mpi-dev libboost-test-dev libboost-date-time-dev libboost-filesystem-dev libboost-serialization-dev libboost-program-options-dev libboost-regex-dev
          sudo apt install pybind11-dev doxygen
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install -r requirements.txt
          cmake -E make_directory ${{runner.workspace}}/build
      - name: Run sphinx
        run: |
          cmake --preset docs
          cmake --build --preset docs
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/docs/docs/sphinx/ # The folder the action should deploy.
